model1 <- lm(y~ x + I(sin(2*pi*x/360)))
the d_ss_mean, but with all the A and M values meaned out as well.
d_ss_mean_noAM <- d_ss_mean %>%
group_by(flask, attempt,hour_index,hr_since_light, FAhi,light_regime, julian_time,sample_datetime, sample_time, lightORdark) %>%
summarise_at(.vars = names(.)[13:16],
.funs = c(mean="mean"))
# Test flask use E
FLASK <- filter(d_ss_mean_noAM, flask == "E")
# create estimate of curve using smooth.Pspline() function
pspl <- smooth.Pspline(FLASK$julian_time, FLASK$`Picochlorum Events/μL(V)_mean`,norder =3 )
View(d_ss_mean_noAM)
# create estimate of curve using smooth.Pspline() function
pspl <- smooth.Pspline(FLASK$julian_time, FLASK$`Picochlorum Events/μL(V)_mean`,norder =3 )
# create estimate of curve using smooth.Pspline() function
pspl <- smooth.Pspline(FLASK$julian_time, FLASK$`Picochlorum Events/μL(V)_mean_mean`,norder =3 )
d0 <- predict(pspl, FLASK$julian_time, nderiv=0)
plot(pspl)
lines(FLASK$julian_time, d0, lwd=3, lty=2, col="red")
plot(pspl)
plot(pspl)
lines(FLASK$julian_time, d0, lwd=3, lty=2, col="red")
d1 <- predict(pspl, FLASK$julian_time, nderiv=1)
plot(FLASK$julian_time, d1)
lines(FLASK$julian_time, d1, lwd=3, lty=2, col="red")
gr_data <- data.frame("x" = FLASK$julian_time, "y" =FLASK$`Picochlorum Events/μL(V)_mean`, "d0" = d0, "d1" = d1)
gr_data <- data.frame("x" = FLASK$julian_time, "y" =FLASK$`Picochlorum Events/μL(V)_mean_mean`, "d0" = d0, "d1" = d1)
p <- ggplot(data =gr_data) +
geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y))
geom_point(aes(x=x, y= d1))
print(p)
p <- ggplot(data =gr_data) +
geom_point(aes(x = x, y = d1)) +
geom_smooth(aes(x = x, y = y))
print(p)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=0, rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
FLASK <- filter(d_ss_mean,
flask == "B",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=0, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
fit
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17, kbin = 100)
fit
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17, kbin = 1)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17, kbin = 2)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17, kbin = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17, kbin = 10)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17, kbin = 500)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "E",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
fit <- frfast(events ~ hr_since_light, data = FLASK,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1,h0=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1,h0=2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1,h0=20, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1,h0=2000, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1,h0=10000, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=1,h0=10000000, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=10000000, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.1, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.5, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.2,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
autoplot(fit, der = 1)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.2,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
FLASK <- filter(d_ss_mean,
flask == "E",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.2,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
autoplot(fit, der = 1)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
grobs = list(autoplot(fit),autoplot(fit, der = 1))
count(grobs)
nrow(grobs)
length(grobs)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = length(grobs))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "E",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.2,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = length(grobs))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "E",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.2,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = length(grobs))
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.2,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = length(grobs))
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = length(grobs))
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
length(grobs)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
View(what)
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "B",
hr_since_light >=2 & hr_since_light <= 23)
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "B",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "B",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "F",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "G",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "H",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "I",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "J",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
fit0 <- frfast(events~ hr_since_light, data = FLASK)
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "J",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "J",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.15,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
View(what0)
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "J",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.3,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "J",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "J",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "K",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.15, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "K",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1), autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 4)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "K",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "L",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "B",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "E",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "F",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
# # Test flask use E
# d_ss_mean <- d_ss_mean %>% transform(hour_index = as.numeric(hour_index))
#
FLASK <- filter(d_ss_mean,
flask == "F",
hr_since_light >=2 & hr_since_light <= 23)
names(FLASK)[13] <- "events"
# Plot of actual plus derivative!!!
fit <- frfast(events ~ hr_since_light, data = FLASK,h0=0.5,rank1 =9, ranku= 17)
fit2 <- frfast(events~ hr_since_light, data = FLASK, p=2,h0=0.2, rank1 =9, ranku= 17)
fit0 <- frfast(events~ hr_since_light, data = FLASK, p=2)
gridExtra::grid.arrange(grobs = list(autoplot(fit),autoplot(fit, der = 1)), ncol =1 , nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit2),autoplot(fit2, der = 1)), ncol = 1, nrow = 2)
gridExtra::grid.arrange(grobs = list(autoplot(fit0),autoplot(fit0, der = 1)), ncol =1 , nrow = 2)
what <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit)[[1]], critical(fit)[[2]], critical(fit)[[3]])))
what2 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit2)[[1]], critical(fit2)[[2]], critical(fit2)[[3]])))
what0 <- data.frame(cbind(der = c("Estimation","First_der", "Second_der"), rbind(critical(fit0)[[1]], critical(fit0)[[2]], critical(fit0)[[3]])))
