data[row,"start_cells"] <- "1000"
}
}
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
View(data)
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
rlang::last_error()
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
#else {data[row,"dil_factor"] <- 1
}
}
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)%>%
transform(dil_factor = as.numeric(dil_factor))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor)) %>%
transform(day = as.numeric(day))
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor)) %>%
transform(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = as.numeric(day)*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * as.numeric(data$dil_factor))
View(time_start)
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_FF_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Picochlorum Events`,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum SD FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum SD SSC-A`, `Picochlorum Median PC5.5-A`, `Picochlorum SD PC5.5-A`, `Picochlorum Median PE-A`, `Picochlorum SD PE-A`)
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * (data$dil_factor))
data$`Picochlorum Events/μL(V)` * (data$dil_factor)
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor)) %>%
transform(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * (data$dil_factor))
data[8]
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data[8] * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_FF_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Picochlorum Events`,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum SD FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum SD SSC-A`, `Picochlorum Median PC5.5-A`, `Picochlorum SD PC5.5-A`, `Picochlorum Median PE-A`, `Picochlorum SD PE-A`)
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor)) %>%
transform(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data[8] * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_FF_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Picochlorum Events`,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum SD FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum SD SSC-A`, `Picochlorum Median PC5.5-A`, `Picochlorum SD PC5.5-A`, `Picochlorum Median PE-A`, `Picochlorum SD PE-A`)
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
tidy = FALSE,
fig.height=8,
fig.width=8,
results = 'asis')
opts_knit$set(width=75)
library("ggplot2")
library("dplyr")
library("plotrix" ) # needed for standard error
library("readxl") # Read excel file
library("readr")
library("lubridate")
library("tidyr")
library("stringr")
library("scales")
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
transform(dil_factor = as.numeric(dil_factor)) %>%
transform(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_FF_start_cells" = paste(day,FF,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data[8] * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_FF_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Picochlorum Events`,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum SD FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum SD SSC-A`, `Picochlorum Median PC5.5-A`, `Picochlorum SD PC5.5-A`, `Picochlorum Median PE-A`, `Picochlorum SD PE-A`)
get_table("/Users/davidmah/Desktop/Flask Data.xlsx")
library(xtable)
library(readxl)
get_table <- function (csv_path){
table <- read_excel(csv_path)
print(xtable(table),
comment = FALSE)
}
get_table("/Users/davidmah/Desktop/Flask Data.xlsx")
get_table("/Users/davidmah/Desktop/Flask Data1.xlsx")
