# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Continent") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
events
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light Condition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/E_Event_JT.png", width = 1000, height = 400)
events
events
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
events
??ggtitle
?expression
?as.string
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
ggtitle(as.string(Flask FLASK[1,"flask"])) +
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
tidy = FALSE,
fig.height=8,
fig.width=8,
results = 'asis')
opts_knit$set(width=75)
library("ggplot2")
library("dplyr")
library("plotrix" ) # needed for standard error
library("readxl") # Read excel file
library("readr")
library("lubridate")
library("tidyr")
# Read the metadata
flaskdata <- read_csv("../metadata/flaskdata/flaskdata.csv")
# Add time elapsed since culture start
flaskdata <- flaskdata %>%
dplyr::mutate(julian_culture_st= make_datetime(flaskdata$`culture year`,flaskdata$`culture month`,flaskdata$`culture day`,flaskdata$`culture hour`,flaskdata$`culture min`)) %>%
dplyr::mutate(julian_sample_st= make_datetime(flaskdata$`sample year`,flaskdata$`sample month`,flaskdata$`sample day`,flaskdata$`sample hour`,flaskdata$`sample min`))%>%
dplyr::mutate(days_elapsed = julian_sample_st-julian_culture_st) %>%
dplyr::mutate(FA = paste(flask,attempt, sep = "")) %>%
dplyr::mutate(light_on = format(make_datetime(hour = flaskdata$`light hour`, min = flaskdata$`light min`), format = "%H:%M:%S")) %>%
dplyr::mutate(dark_on = format(make_datetime(hour = flaskdata$`dark hour`, min = flaskdata$`dark min`), format = "%H:%M:%S"))
## Read the data
# Find all csv files
myfiles = list.files(path="../metadata", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- data %>%
dplyr::mutate(flask =  substr(`Tube Name:`, 1,1),
attempt = substr(`Tube Name:`, 2,2),
hour_index = substr(`Tube Name:`, 3,4),
AorM = substr(`Tube Name:`, 5,5),
repli = substr(`Tube Name:`, 6,6)
) %>%
dplyr::mutate(FA = paste(flask,attempt, sep = ""))
## Compare both dataframes to get julian start time and light regime
julian_time <- data.frame()
light_regime <- data.frame()
for (row in 1:nrow(data)){
index <- match(data[row,"FA"],flaskdata$FA)
julian_time <- rbind(julian_time,as.numeric(flaskdata[index,"days_elapsed"])+as.numeric(data[row,"hour_index"])/24)
light_regime <- rbind(light_regime, flaskdata[index,"light regime"])
}
names(julian_time)[1] <- "julian_time"
data<- cbind(data, julian_time)
names(light_regime)[1] <- "light_regime"
data<- cbind(data, light_regime)
# Add time sampled
data <- data %>%
dplyr::mutate(julian_time_diff = as.difftime(data$julian_time, format = "%d", units = "days"))
sample_datetime <- data.frame()
for (row in 1:nrow(data)){
index <- match(data[row,"FA"],flaskdata$FA)
sample_datetime <- rbind(sample_datetime, flaskdata[index,"julian_culture_st"]+data.frame(data[row,"julian_time_diff"]))
}
names(sample_datetime)[1] <- "sample_datetime"
data<- cbind(data, sample_datetime)
# Extract just time from sample
data <- data %>%
dplyr::mutate(sample_time = format(sample_datetime, format = "%H:%M:%S"))
# data$sample_time <- strptime(data$sample_time,format="%H:%M")
lightORdark <- data.frame()
LorD<- ""
# Check if it is light or dark
for (row in 1:nrow(data)){
index <- match(data[row,"FA"],flaskdata$FA)
if(data[row,"flask"] == "A" | data[row,"flask"] == "B" |data[row,"flask"] == "E"|data[row,"flask"] == "F"){
ifelse(data[row,"sample_time"] >= flaskdata[index,"dark_on"] & data[row,"sample_time"] <= flaskdata[index,"light_on"], LorD <- "dark", LorD <- "light")
}
else {
ifelse(data[row,"sample_time"] >= flaskdata[index,"light_on"] & data[row,"sample_time"] <= flaskdata[index,"dark_on"], LorD <- "light", LorD <- "dark")
}
lightORdark <- rbind(lightORdark, data.frame(LorD))
}
names(lightORdark)[1] <- "lightORdark"
data<- cbind(data, lightORdark)
# Extract the more useful data
data_pico <- data %>%
select(`flask`,attempt,light_regime, hour_index, AorM, repli,julian_time,sample_datetime, sample_time,lightORdark,`Picochlorum Events`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum SD FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum SD SSC-A`, `Picochlorum Median PC5.5-A`, `Picochlorum SD PC5.5-A`, `Picochlorum Median PE-A`, `Picochlorum SD PE-A`)
# Pick a flask
FLASK<-filter(data_pico,flask == "E")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/E_Event_JT.png", width = 1000, height = 400)
events
dev.off()
# Plot for FSC
FSC <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Median FSC-A`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
# png("../report_david/img/PAR_geomsmooth.png", width = 1000, height = 400)
FSC
# dev.off()
# Plot of multiple light regimes together
REGIME<-filter(data_pico,light_regime == "1608")
regime_plot <- ggplot(REGIME, aes(x = REGIME$sample_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = lightORdark, shape = flask)) +
xlab("Sampling Hour") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
regime_plot
regime_plot <- ggplot(REGIME, aes(x = REGIME$sample_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = flask, shape = lightORdark)) +
xlab("Sampling Hour") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
# Plot of multiple light regimes together
REGIME<-filter(data_pico,light_regime == "1608")
regime_plot <- ggplot(REGIME, aes(x = REGIME$sample_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = flask, shape = lightORdark)) +
xlab("Sampling Hour") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
regime_plot
regime_plot <- ggplot(REGIME, aes(x = REGIME$sample_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = flask, shape = lightORdark)) +
xlab("Sampling Hour") +
ylab("FSC") +
labs(col="Flask", shape = "Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
regime_plot
# Pick a flask
FLASK<-filter(data_pico,flask == "E")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/E_Event_JT.png", width = 1000, height = 400)
events
dev.off()
# Plot for FSC
FSC <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Median FSC-A`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
# png("../report_david/img/PAR_geomsmooth.png", width = 1000, height = 400)
FSC
# dev.off()
# Plot of multiple light regimes together
REGIME<-filter(data_pico,light_regime == "1608")
regime_plot <- ggplot(REGIME, aes(x = REGIME$sample_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = flask, shape = lightORdark)) +
xlab("Sampling Hour") +
ylab("FSC") +
labs(col="Flask", shape = "Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
regime_plot
# Pick a flask
FLASK<-filter(data_pico,flask == "E")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/E_Event_JT.png", width = 1000, height = 400)
events
dev.off()
# Plot for FSC
FSC <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Median FSC-A`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
# png("../report_david/img/PAR_geomsmooth.png", width = 1000, height = 400)
FSC
# dev.off()
# Plot of multiple light regimes together
REGIME<-filter(data_pico,light_regime == "1608")
regime_plot <- ggplot(REGIME, aes(x = REGIME$julian_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = flask, shape = lightORdark)) +
xlab("Sampling Hour") +
ylab("FSC") +
labs(col="Flask", shape = "Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
regime_plot
# Pick a flask
FLASK<-filter(data_pico,flask == "E")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/E_Event_JT.png", width = 1000, height = 400)
events
dev.off()
# Plot for FSC
FSC <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Median FSC-A`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
# png("../report_david/img/PAR_geomsmooth.png", width = 1000, height = 400)
FSC
# dev.off()
# Plot of multiple light regimes together
REGIME<-filter(data_pico,light_regime == "1608")
regime_plot <- ggplot(REGIME, aes(x = REGIME$julian_time, y = REGIME$`Picochlorum Median FSC-A`))+
geom_smooth() +
#stat_smooth(method = "lm", col = "red") +
geom_point(aes(color = flask, shape = lightORdark)) +
xlab("Time Since Start") +
ylab("FSC") +
labs(col="Flask", shape = "Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
regime_plot
# Pick a flask
FLASK<-filter(data_pico,flask == "B")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/B_Event_JT.png", width = 1000, height = 400)
events
dev.off()
FLASK<-filter(data_pico,flask == "F")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/F_Event_JT.png", width = 1000, height = 400)
events
dev.off()
FLASK<-filter(data_pico,flask == "F")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Time Since Start") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
FLASK<-filter(data_pico,flask == "F")
# Plot for Events
events <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Time Since Start") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
png("../report/img/F_Event_JT.png", width = 1000, height = 400)
events
dev.off()
events <- events + facet_wrap(~flask)
# png("../report/img/F_Event_JT.png", width = 1000, height = 400)
events
# Plot for Events
events <- ggplot(data_pico, aes(x = data_pico$julian_time, y = data_pico$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Time Since Start") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
events <- events + facet_wrap(~flask)
# png("../report/img/F_Event_JT.png", width = 1000, height = 400)
events
# Plot for Events
events <- ggplot(data_pico, aes(x = data_pico$julian_time, y = data_pico$`Picochlorum Events/μL(V)`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Time Since Start") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
events <- events + facet_wrap(~flask)
png("../report/img/Event_JT.png", width = 1000, height = 800)
events
dev.off()
events <- ggplot(data_pico, aes(x = data_pico$julian_time, y = log(data_pico$`Picochlorum Events/μL(V)`)))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Time Since Start") +
ylab("Events/μL") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
events <- events + facet_wrap(~flask)
png("../report/img/Event_JT.png", width = 1000, height = 800)
events
dev.off()
events <- ggplot(data_pico, aes(x = data_pico$julian_time, y = log(data_pico$`Picochlorum Events/μL(V)`)))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Time Since Start") +
ylab("Log(Events/μL)") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
events <- events + facet_wrap(~flask)
png("../report/img/Event_JT.png", width = 1000, height = 800)
events
dev.off()
# Plot for FSC
FSC <- ggplot(FLASK, aes(x = FLASK$julian_time, y = FLASK$`Picochlorum Median PC5.5-A`))+
geom_smooth() +
geom_point(aes(color = lightORdark)) +
xlab("Julian Time") +
ylab("FSC") +
labs(col="Light \nCondition") +
theme_bw()+
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
legend.title =element_text(size=28,face="bold"),
legend.text = element_text(size=28))
# png("../report_david/img/PAR_geomsmooth.png", width = 1000, height = 400)
FSC
