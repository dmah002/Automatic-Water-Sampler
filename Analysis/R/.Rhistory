data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
mutate(dil_factor = as.numeric(dil_factor)) %>%
mutate(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_start_cells" = paste(day,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum Median PC5.5-A`)
# Select rows of dilutions that best fit 10^3 rule
data_pico_no0<- filter(data_pico,repli =="A"|repli == "B"|repli == "C"|repli == "X"|repli == "Y"|repli == "Z")
data_pico_no0_Rdil<- data.frame()
keep_rows <-data.frame()
for(row in 1:nrow(data_pico_no0)){
if(data_pico_no0[row,"day"] == 10){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 16)
}
else if(data_pico_no0[row,"day"] == 11){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 32)
}
else if(data_pico_no0[row,"day"] == 12){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 32)
}
else if(data_pico_no0[row,"day"] == 13){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 64)
}
else if(data_pico_no0[row,"day"] == 14){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 64)
}
else {
keep_rows <- data_pico_no0[row,]
}
data_pico_no0_Rdil <-rbind(data_pico_no0_Rdil,keep_rows)
}
# Mean of optimal dilutions for each starting concentration
data_pico_mean <- data_pico_no0_Rdil %>%
group_by(day_start_cells,start_cells, day,FF, dil_factor, sample_datetime) %>%
summarise_at(.vars = names(.)[8:12],
.funs = c(mean="mean")) %>%
transform(day = as.numeric(day)) %>%
transform(dil_factor = as.numeric(dil_factor))
# Plot for Events
events <- ggplot(data_pico_mean, aes(x = data_pico_mean$sample_datetime, y = data_pico_mean$Weighted.Picochlorum.Events.μL.V._mean))+
geom_smooth() +
geom_point(aes(col=FF)) +
labs(title=expression(paste("Optimal Sampling Window of Strain SMS40 (", italic("Picochlorum sp."), ")"))) +
labs(color='Storage Procedure') +
xlab("") +
ylab("Cells/μL") +
scale_y_continuous(trans = "log10") +
scale_color_manual(labels = c("Flash Frozen in Liquid N", "Immediate Storage at -80°C"), values = c(gg_color_hue(2)[1], gg_color_hue(2)[2])) +
theme_bw()+
scale_x_datetime(breaks = date_breaks("days"), labels = date_format("%b %d"))+
theme(title = element_text(size=16, face="bold"),
axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1),
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
legend.title =element_text(size=16,face="bold"),
legend.text = element_text(size=14))
events <- events +
facet_wrap(~start_cells, labeller = labeller(start_cells = c("1000" = "Starting Conc of 10^3 cells/ml",
"10000" = "Starting Conc of 10^4 cells/ml"))) +
theme(strip.text.x = element_text(size = 16))
events
png("../report/img/daily_growth.png", width = 1000, height = 600)
print(events)
dev.off()
# Plot of comparison between FF and NFF
# get df of only
# Keep only rows of FAhi where both FF and NFF exist
only_ff_nff <- subset(data_pico_mean, day_start_cells %in% data_pico_mean[duplicated(data_pico_mean$day_start_cells),"day_start_cells"])
# Compare differences in
only_ff <- filter(only_ff_nff,FF == "FF")
only_nff <- filter(only_ff_nff,FF == "NFF")
FF_ratio <-data.frame(c(only_ff[1:6],only_nff[-c(1:6)]/only_ff[-c(1:6)])) %>%
rename("Events/μL" = Picochlorum.Events.μL.V._mean,
"FSC" = Picochlorum.Median.FSC.A_mean,
"SSC" = Picochlorum.Median.SSC.A_mean,
"PC5.5" = Picochlorum.Median.PC5.5.A_mean)
FF_ratio <- FF_ratio[,c(3,8:11)]
FF_ratio <- FF_ratio %>% gather(parameter, ratio, -day)
p <- ggplot(FF_ratio, aes(x=parameter, y=ratio)) +
geom_boxplot(fill="gray") +
labs(title="Ratio of FCM parameters of direct -80°C storage against flash-freeze",x="FCM Parameters", y = "Ratio")+
theme_classic() +
theme(title = element_text(size=14, face="bold"),
axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
png(file.path("../report/img","Daily_FF_NFF.png"), width = 800, height = 400)
print(p)
dev.off()
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
tidy = FALSE,
fig.height=8,
fig.width=8,
results = 'asis')
opts_knit$set(width=75)
library("ggplot2")
library("dplyr")
library("plotrix" ) # needed for standard error
library("readxl") # Read excel file
library("readr")
library("lubridate")
library("tidyr")
library("stringr")
library("scales")
# Create function to emulate ggplot colour scheme:
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
mutate(dil_factor = as.numeric(dil_factor)) %>%
mutate(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_start_cells" = paste(day,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum Median PC5.5-A`)
# Select rows of dilutions that best fit 10^3 rule
data_pico_no0<- filter(data_pico,repli =="A"|repli == "B"|repli == "C"|repli == "X"|repli == "Y"|repli == "Z")
data_pico_no0_Rdil<- data.frame()
keep_rows <-data.frame()
for(row in 1:nrow(data_pico_no0)){
if(data_pico_no0[row,"day"] == 10){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 16)
}
else if(data_pico_no0[row,"day"] == 11){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 32)
}
else if(data_pico_no0[row,"day"] == 12){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 32)
}
else if(data_pico_no0[row,"day"] == 13){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 64)
}
else if(data_pico_no0[row,"day"] == 14){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 64)
}
else {
keep_rows <- data_pico_no0[row,]
}
data_pico_no0_Rdil <-rbind(data_pico_no0_Rdil,keep_rows)
}
# Mean of optimal dilutions for each starting concentration
data_pico_mean <- data_pico_no0_Rdil %>%
group_by(day_start_cells,start_cells, day,FF, dil_factor, sample_datetime) %>%
summarise_at(.vars = names(.)[8:12],
.funs = c(mean="mean")) %>%
transform(day = as.numeric(day)) %>%
transform(dil_factor = as.numeric(dil_factor))
# Plot for Events
events <- ggplot(data_pico_mean, aes(x = data_pico_mean$sample_datetime, y = data_pico_mean$Weighted.Picochlorum.Events.μL.V._mean))+
geom_smooth() +
geom_point(aes(col=FF)) +
labs(title=expression(paste("Optimal Sampling Window of Strain SMS40 (", italic("Picochlorum sp."), ")"))) +
labs(color='Storage Procedure') +
xlab("") +
ylab("Cells/μL") +
scale_y_continuous(trans = "log10") +
scale_color_manual(labels = c("Flash Frozen in Liquid N", "Immediate Storage at -80°C"), values = c(gg_color_hue(2)[1], gg_color_hue(2)[2])) +
theme_bw()+
scale_x_datetime(breaks = date_breaks("days"), labels = date_format("%b %d"))+
theme(title = element_text(size=16, face="bold"),
axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1),
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
legend.title =element_text(size=16,face="bold"),
legend.text = element_text(size=14))
events <- events +
facet_wrap(~start_cells, labeller = labeller(start_cells = c("1000" = "Starting Conc of 10^3 cells/ml",
"10000" = "Starting Conc of 10^4 cells/ml"))) +
theme(strip.text.x = element_text(size = 16))
events
png("../report/img/daily_growth.png", width = 1000, height = 600)
print(events)
dev.off()
# Plot of comparison between FF and NFF
# get df of only
# Keep only rows of FAhi where both FF and NFF exist
only_ff_nff <- subset(data_pico_mean, day_start_cells %in% data_pico_mean[duplicated(data_pico_mean$day_start_cells),"day_start_cells"])
# Compare differences in
only_ff <- filter(only_ff_nff,FF == "FF")
only_nff <- filter(only_ff_nff,FF == "NFF")
FF_ratio <-data.frame(c(only_ff[1:6],only_nff[-c(1:6)]/only_ff[-c(1:6)])) %>%
rename("Cells/μL" = Picochlorum.Events.μL.V._mean,
"FSC" = Picochlorum.Median.FSC.A_mean,
"SSC" = Picochlorum.Median.SSC.A_mean,
"PC5.5" = Picochlorum.Median.PC5.5.A_mean)
FF_ratio <- FF_ratio[,c(3,8:11)]
FF_ratio <- FF_ratio %>% gather(parameter, ratio, -day)
p <- ggplot(FF_ratio, aes(x=parameter, y=ratio)) +
geom_boxplot(fill="gray") +
labs(title="Ratio of FCM parameters of direct -80°C storage against flash-freeze",x="FCM Parameters", y = "Ratio")+
theme_classic() +
theme(title = element_text(size=14, face="bold"),
axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
png(file.path("../report/img","Daily_FF_NFF.png"), width = 800, height = 400)
print(p)
dev.off()
png(file.path("../report/img","Daily_FF_NFF.png"), width = 400, height = 600)
print(p)
dev.off()
png(file.path("../report/img","Daily_FF_NFF.png"), width = 800, height = 400)
print(p)
dev.off()
png(file.path("../report/img","Daily_FF_NFF_presentation.png"), width = 400, height = 600)
print(p)
dev.off()
p<- p + labs(title="Ratio of FCM parameters of direct -80°C\nstorage against flash-freeze")
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
tidy = FALSE,
fig.height=8,
fig.width=8,
results = 'asis')
opts_knit$set(width=75)
library("ggplot2")
library("dplyr")
library("plotrix" ) # needed for standard error
library("readxl") # Read excel file
library("readr")
library("lubridate")
library("tidyr")
library("stringr")
library("scales")
# Create function to emulate ggplot colour scheme:
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " "))
# Split ID cell and dilution cells
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "start_cells"),
sep = "(?<=[0-9])(?=[A-Za-z])"
) %>%
mutate(dil_factor = as.numeric(dil_factor)) %>%
mutate(day = as.numeric(day))
for (row in 1:nrow(data)){
# Replace NA with default values for columns ("day", "dil_factor", "FF")
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
if (is.na(data[row,"dil_factor"]) == "TRUE"){
if (data[row,"day"] == 6){
data[row,"dil_factor"] <- 2}
else if (data[row,"day"] == 7){
data[row,"dil_factor"] <- 4}
else if (data[row,"day"] == 8){
data[row,"dil_factor"] <- 8}
else if (data[row,"day"] == 9){
data[row,"dil_factor"] <- 16}
else {data[row,"dil_factor"] <- 1
}
}
if (is.na(data[row,"FF"]) == "TRUE"){
data[row,"FF"] <- "NFF"
}
if (data[row,"repli"] == "A"|data[row,"repli"] == "B"|data[row,"repli"] == "C"){
data[row,"start_cells"] <- "10000"
}
if (data[row,"repli"] == "X"|data[row,"repli"] == "Y"|data[row,"repli"] == "Z"){
data[row,"start_cells"] <- "1000"
}
}
# Create metadata df
time_start <- data.frame("year" = 2020, "month" = 10, "day" = 21, "hour" = 11, "min" = 30) %>%
dplyr::mutate("datetime" = make_datetime(year, month, day, hour, min))
data <- data %>%
dplyr::mutate("sample_datetime" = day*(60*60*24) + time_start$datetime,
"day_start_cells" = paste(day,start_cells, sep = ""),
"Weighted Picochlorum Events/μL(V)" = data$`Picochlorum Events/μL(V)` * (data$dil_factor))
# Extract the more useful data
data_pico <- data %>%
select(day_start_cells,start_cells,`repli`,day, FF, dil_factor,sample_datetime,`Weighted Picochlorum Events/μL(V)`,`Picochlorum Events/μL(V)`, `Picochlorum Median FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum Median PC5.5-A`)
# Select rows of dilutions that best fit 10^3 rule
data_pico_no0<- filter(data_pico,repli =="A"|repli == "B"|repli == "C"|repli == "X"|repli == "Y"|repli == "Z")
data_pico_no0_Rdil<- data.frame()
keep_rows <-data.frame()
for(row in 1:nrow(data_pico_no0)){
if(data_pico_no0[row,"day"] == 10){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 16)
}
else if(data_pico_no0[row,"day"] == 11){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 32)
}
else if(data_pico_no0[row,"day"] == 12){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 32)
}
else if(data_pico_no0[row,"day"] == 13){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 64)
}
else if(data_pico_no0[row,"day"] == 14){
keep_rows <- filter(data_pico_no0[row,],dil_factor == 64)
}
else {
keep_rows <- data_pico_no0[row,]
}
data_pico_no0_Rdil <-rbind(data_pico_no0_Rdil,keep_rows)
}
# Mean of optimal dilutions for each starting concentration
data_pico_mean <- data_pico_no0_Rdil %>%
group_by(day_start_cells,start_cells, day,FF, dil_factor, sample_datetime) %>%
summarise_at(.vars = names(.)[8:12],
.funs = c(mean="mean")) %>%
transform(day = as.numeric(day)) %>%
transform(dil_factor = as.numeric(dil_factor))
# Plot for Events
events <- ggplot(data_pico_mean, aes(x = data_pico_mean$sample_datetime, y = data_pico_mean$Weighted.Picochlorum.Events.μL.V._mean))+
geom_smooth() +
geom_point(aes(col=FF)) +
labs(title=expression(paste("Optimal Sampling Window of Strain SMS40 (", italic("Picochlorum sp."), ")"))) +
labs(color='Storage Procedure') +
xlab("") +
ylab("Cells/μL") +
scale_y_continuous(trans = "log10") +
scale_color_manual(labels = c("Flash Frozen in Liquid N", "Immediate Storage at -80°C"), values = c(gg_color_hue(2)[1], gg_color_hue(2)[2])) +
theme_bw()+
scale_x_datetime(breaks = date_breaks("days"), labels = date_format("%b %d"))+
theme(title = element_text(size=16, face="bold"),
axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1),
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
legend.title =element_text(size=16,face="bold"),
legend.text = element_text(size=14))
events <- events +
facet_wrap(~start_cells, labeller = labeller(start_cells = c("1000" = "Starting Conc of 10^3 cells/ml",
"10000" = "Starting Conc of 10^4 cells/ml"))) +
theme(strip.text.x = element_text(size = 16))
events
png("../report/img/daily_growth.png", width = 1000, height = 600)
print(events)
dev.off()
# Plot of comparison between FF and NFF
# get df of only
# Keep only rows of FAhi where both FF and NFF exist
only_ff_nff <- subset(data_pico_mean, day_start_cells %in% data_pico_mean[duplicated(data_pico_mean$day_start_cells),"day_start_cells"])
# Compare differences in
only_ff <- filter(only_ff_nff,FF == "FF")
only_nff <- filter(only_ff_nff,FF == "NFF")
FF_ratio <-data.frame(c(only_ff[1:6],only_nff[-c(1:6)]/only_ff[-c(1:6)])) %>%
rename("Cells/μL" = Picochlorum.Events.μL.V._mean,
"FSC" = Picochlorum.Median.FSC.A_mean,
"SSC" = Picochlorum.Median.SSC.A_mean,
"PC5.5" = Picochlorum.Median.PC5.5.A_mean)
FF_ratio <- FF_ratio[,c(3,8:11)]
FF_ratio <- FF_ratio %>% gather(parameter, ratio, -day)
p <- ggplot(FF_ratio, aes(x=parameter, y=ratio)) +
geom_boxplot(fill="gray") +
labs(title="Ratio of FCM parameters of direct -80°C storage against flash-freeze",x="FCM Parameters", y = "Ratio")+
theme_classic() +
theme(title = element_text(size=14, face="bold"),
axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
png(file.path("../report/img","Daily_FF_NFF.png"), width = 800, height = 400)
print(p)
dev.off()
png(file.path("../report/img","Daily_FF_NFF_presentation.png"), width = 400, height = 600)
p<- p + labs(title="Ratio of FCM parameters of direct -80°C\nstorage against flash-freeze")
print(p)
dev.off()
png("../report/img/daily_growth_presentation.png", width = 600, height = 600)
print(events)
dev.off()
png("../report/img/daily_growth_presentation.png", width = 900, height = 900)
print(events)
dev.off()
png("../report/img/daily_growth_presentation.png", width = 900, height = 600)
print(events)
print(events)
dev.off()
png("../report/img/daily_growth_presentation.png", width = 800, height = 600)
print(events)
dev.off()
