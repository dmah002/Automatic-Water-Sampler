FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,`Tube Names:`], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_yes,data[row,])}
}
if (str_detect(data[row,`Tube Name:`], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,`Tube Name:`], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_yes,data[row,])}
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_yes,data[row,])}
}
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_yes,data[row,])}
}
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_no,data[row,])}
}
View(FF_no)
View(FF_yes)
str_detect(data[2,"Tube Name:"], "FF")
str_detect(data[5,"Tube Name:"], "FF")
str_detect(data[8,"Tube Name:"], "FF")
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_no,data[row,])}
}
FF_yes<- rbind(FF_yes,data[row,]
)
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
FF_yes<- rbind(FF_yes,data[row,])
View(FF_yes)
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_no,data[row,])}
}
View(FF_yes)
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
else {FF_no <- rbind(FF_no,data[row,])}
}
str_detect(data[row,"Tube Name:"], "FF")
str_detect(data[row,"Tube Name:"], "FF")
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
}
FF_no <- FF_no
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
FF_no <- FF_no
}
else {FF_no <- rbind(FF_no,data[row,])}
FF_no <- FF_yes
}
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
FF_no <- FF_no
}
else {FF_no <- rbind(FF_no,data[row,])}
FF_yes <- FF_yes
}
## Read the data
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
FF_no <- FF_no
}
data <- data %>%
dplyr::mutate(repli =  substr(`Tube Name:`, 1,1),
attempt = substr(`Tube Name:`, 2,2),
hour_index = substr(`Tube Name:`, 3,4),
AorM = substr(`Tube Name:`, 5,5),
repli = substr(`Tube Name:`, 6,6)
) %>%
dplyr::mutate(FA = paste(flask,attempt, sep = ""),
FAhi = paste(flask, attempt,hour_index, sep = ""))
## Compare both dataframes to get julian start time and light regime
julian_time <- data.frame()
light_regime <- data.frame()
for (row in 1:nrow(data)){
index <- match(data[row,"FA"],flaskdata$FA)
julian_time <- rbind(julian_time,as.numeric(flaskdata[index,"days_elapsed"])+as.numeric(data[row,"hour_index"])/24)
light_regime <- rbind(light_regime, flaskdata[index,"light regime"])
}
names(julian_time)[1] <- "julian_time"
data<- cbind(data, julian_time)
names(light_regime)[1] <- "light_regime"
data<- cbind(data, light_regime)
# Add time sampled
data <- data %>%
dplyr::mutate(julian_time_diff = as.difftime(data$julian_time, format = "%d", units = "days"))
sample_datetime <- data.frame()
for (row in 1:nrow(data)){
index <- match(data[row,"FA"],flaskdata$FA)
sample_datetime <- rbind(sample_datetime, flaskdata[index,"julian_culture_st"]+data.frame(data[row,"julian_time_diff"]))
}
names(sample_datetime)[1] <- "sample_datetime"
data<- cbind(data, sample_datetime)
# Extract just time from sample
data <- data %>%
dplyr::mutate(sample_time = format(sample_datetime, format = "%H:%M:%S"))
# data$sample_time <- strptime(data$sample_time,format="%H:%M")
# Loop through data to add "Light" or "Dark" as a another variable in the last column
lightORdark <- data.frame()
LorD<- ""
# Check if it is light or dark
for (row in 1:nrow(data)){
index <- match(data[row,"FA"],flaskdata$FA)
# A, B, E, F have dark cycles ending after midnight. The rest of the samples cycles should end before midnight.
if(data[row,"flask"] == "A" | data[row,"flask"] == "B" |data[row,"flask"] == "E"|data[row,"flask"] == "F"){
ifelse(data[row,"sample_time"] >= flaskdata[index,"dark_on"] & data[row,"sample_time"] <= flaskdata[index,"light_on"], LorD <- "dark", LorD <- "light")
}
else {
ifelse(data[row,"sample_time"] >= flaskdata[index,"light_on"] & data[row,"sample_time"] <= flaskdata[index,"dark_on"], LorD <- "light", LorD <- "dark")
}
lightORdark <- rbind(lightORdark, data.frame(LorD))
}
names(lightORdark)[1] <- "lightORdark"
data<- cbind(data, lightORdark)
# Loop through data and compare sampling times with the tube change data to determine how long it has been sitting in the sampler for
time_since_tube_change <- data.frame()
time_tube_change <- ""
# data<- filter(data,flask == "E")
for (row in 1:nrow(data)) {
index <- match(data[row,"FA"],flaskdata$FA)
if(data[row,"AorM"] == "A"){
if (is.na(flaskdata[index,"datetime_1_tube_change"]) == "TRUE"){time_tube_change <- 0}
else if (as.numeric(data[row,"sample_datetime"]) < as.numeric(flaskdata[index,"datetime_1_tube_change"])){
time_tube_change <- as.numeric(flaskdata[index,"datetime_1_tube_change"]) - as.numeric(data[row,"sample_datetime"])
}
else if (is.na(flaskdata[index,"datetime_2_tube_change"]) == "TRUE"){time_tube_change <- 0}
else if (as.numeric(data[row,"sample_datetime"]) >= as.numeric(flaskdata[index,"datetime_1_tube_change"]) & as.numeric(data[row,"sample_datetime"]) < as.numeric(flaskdata[index,"datetime_2_tube_change"])){
time_tube_change <- as.numeric(flaskdata[index,"datetime_2_tube_change"]) - as.numeric(data[row,"sample_datetime"])
}
else if (is.na(flaskdata[index,"datetime_3_tube_change"]) == "TRUE"){time_tube_change <- 0}
else if (as.numeric(data[row,"sample_datetime"]) >= as.numeric(flaskdata[index,"datetime_2_tube_change"]) & as.numeric(data[row,"sample_datetime"]) < as.numeric(flaskdata[index,"datetime_3_tube_change"])){
time_tube_change <- as.numeric(flaskdata[index,"datetime_3_tube_change"]) - as.numeric(data[row,"sample_datetime"])
}
else if (is.na(flaskdata[index,"datetime_4_tube_change"]) == "TRUE"){time_tube_change <- 0}
else if (as.numeric(data[row,"sample_datetime"]) >= as.numeric(flaskdata[index,"datetime_2_tube_change"]) & as.numeric(data[row,"sample_datetime"]) < as.numeric(flaskdata[index,"datetime_3_tube_change"])){
time_tube_change <- as.numeric(flaskdata[index,"datetime_4_tube_change"]) - as.numeric(data[row,"sample_datetime"])
}
else {
time_tube_change <- 0
}
}
else {time_tube_change <- 0}
# divide by 3600 because POSIXct as.numeric is in seconds. So final is hours since tube change.
time_since_tube_change <- rbind(time_since_tube_change, time_tube_change/3600)
}
names(time_since_tube_change)[1] <- "time_since_tube_change"
data<- cbind(data, time_since_tube_change)
# Extract the more useful data
data_pico <- data %>%
select(`flask`,attempt, hour_index, FAhi, AorM, repli,light_regime,julian_time,sample_datetime, sample_time,lightORdark,time_since_tube_change,`Picochlorum Events`,`Picochlorum Events/Î¼L(V)`, `Picochlorum Median FSC-A`, `Picochlorum SD FSC-A`, `Picochlorum Median SSC-A`, `Picochlorum SD SSC-A`, `Picochlorum Median PC5.5-A`, `Picochlorum SD PC5.5-A`, `Picochlorum Median PE-A`, `Picochlorum SD PE-A`)
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
FF_yes <- data.frame()
FF_no <- data.frame()
for (row in nrow(data)){
if (str_detect(data[row,"Tube Name:"], "FF") == "TRUE"){
FF_yes<- rbind(FF_yes,data[row,])
FF_no <- FF_no}
}
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
phone
# Split the tube names
str_subset(data$`Tube Name:`, "FF")
# Split the tube names
!str_subset(data$`Tube Name:`, "FF")
rows_to_remove <- str_subset(data$`Tube Name:`, "FF")[,"Tube Name:"]
# Split the tube names
FF_yes <- str_subset(data$`Tube Name:`, "FF")
rows_to_remove <- FF_yes[,"Tube Name:"]
# Split the tube names
FF_yes <- str_subset(data$`Tube Name:`, "FF")
str_subset(data$`Tube Name:`, "FF")
# Split the tube names
rows_to_remove <- str_subset(data$`Tube Name:`, "FF")
FF_no <- df[!(row.names(data) %in% rows_to_remove),]
FF_no <- df[!(row.names(data) %in% rows_to_remove),]
rows_to_remove
class(rows_to_remove)
row_names_df_to_remove<-c("A","B","C","D","E")
FF_no <- df[!(row.names(data$`Tube Name:`) %in% rows_to_remove),]
FF_yes<- df[!(row.names(data$`Tube Name:`) %in% rows_to_remove),]
row.names(data)
FF_no <- df[!(data$`Tube Name:` %in% rows_to_remove),]
FF_no <- df[!(data %in% rows_to_remove),]
?match
data %in% rows_to_remove
data$`Tube Name:` %in% rows_to_remove
data$`Tube Name:` %in% rows_to_remove
FF_yes <- data$`Tube Name:` %in% rows_to_remove
?filter
FF_yes <- filter(data, data$`Tube Name:` %in% rows_to_remove == "TRUE")
FF_no <- filter(data, data$`Tube Name:` %in% rows_to_remove == "FALSE")
View(FF_no)
View(FF_yes)
?separate
FF_yes %>% separate("Tube Name:", c("ID", "FF","dilu"), " ")
View(FF_yes)
FF_yes <- filter(data, data$`Tube Name:` %in% rows_to_remove == "TRUE")
FF_yes %>% separate("Tube Name:", c("ID", "FF","dilu"), " ")
FF_yes %>% separate("Tube Name:", c("ID", "FF","dilu"), " ")
wee <- FF_yes %>% separate("Tube Name:", c("ID", "FF","dilu"), " ")
View(wee)
FF_yes <- filter(data, data$`Tube Name:` %in% rows_to_remove == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " ")
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
rows_to_remove <- str_subset(data$`Tube Name:`, "FF")
FF_yes <- filter(data, data$`Tube Name:` %in% rows_to_remove == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " ")
FF_no <- filter(data, data$`Tube Name:` %in% rows_to_remove == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " ")
?merge
?full_join
data_new <- full_join(FF_yes,FF_no)
View(data_new)
FF_yes <- filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>%
separate("Tube Name:", c("ID", "FF","dilu"), " ")
FF_no <- filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>%
separate("Tube Name:", c("ID","dilu"), " ")
data_new <- full_join(FF_yes,FF_no)
data_new <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
# Split the tube names
data_new <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
View(data)
data <- data %>%
dplyr::mutate(repli =  substr(`ID`, 1,1),
day = substr(`ID`, 2,3)
) %>%
separate(dilu,
into = c("text", "num"),
sep = "(?<=[A-Za-z])(?=[0-9])"
)
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
data <- data %>%
dplyr::mutate(repli =  substr(`ID`, 1,1),
day = substr(`ID`, 2,3)
) %>%
separate(dilu,
into = c("num", "text"),
sep = "(?=[0-9])(?<=[A-Za-z])"
)
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
data <- data %>%
dplyr::mutate(repli =  substr(`ID`, 1,1),
day = substr(`ID`, 2,3)
) %>%
separate(dilu,
into = c("num", "text"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
data <- data %>%
dplyr::mutate(repli =  substr(`ID`, 1,1),
day = substr(`ID`, 2,3)
) %>%
separate(dilu,
into = c("dil_factor", "X"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
# Find all csv files
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "X"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
tidy = FALSE,
fig.height=8,
fig.width=8,
results = 'asis')
opts_knit$set(width=75)
library("ggplot2")
library("dplyr")
library("plotrix" ) # needed for standard error
library("readxl") # Read excel file
library("readr")
library("lubridate")
library("tidyr")
library("stringr")
myfiles = list.files(path="../data/daily_data", pattern="*.csv", full.names=TRUE)
# Read all csv files
data_all <- lapply(myfiles, read_csv, skip =2)
data <- do.call(rbind, data_all)
# Split the tube names
data <- full_join(filter(data,
data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "TRUE") %>% separate("Tube Name:", c("ID", "FF","dilu"), " "),
filter(data, data$`Tube Name:` %in% str_subset(data$`Tube Name:`, "FF") == "FALSE") %>% separate("Tube Name:", c("ID","dilu"), " "))
View(data)
data <- data %>%
separate(ID,
into = c("repli", "day"),
sep = "(?<=[A-Za-z])(?=[0-9])"
) %>%
separate(dilu,
into = c("dil_factor", "X"),
sep = "(?<=[0-9])(?=[A-Za-z])"
)
is.na(data[116,day])
data
?isna
?is.na
is.na(data[116,day])
is.na(data[116,"day"])
for (row in nrow(data)){
if (data[row,"day"] == "TRUE")
data[row,"day"] <- -1
}
data[116,"day"] <- -1
for (row in nrow(data)){
if (data[row,"day"] == "TRUE")
data[row,"day"] <- -1
}
for (row in nrow(data)){
if (is.na(data[row,"day"]) == "TRUE")
data[row,"day"] <- -1
}
View(data)
is.na(data[row,"day"])
is.na(data[row,"day"])
is.na(data[116,"day"])
is.na(data[115,"day"])
for (row in nrow(data)){
if (is.na(data[row,"day"]) == "TRUE")
data[row,"day"] <- -1
}
for (row in nrow(data)){
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
}
for (row in nrow(data)){
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
}
View(data)
for (row in nrow(data)){
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
}
for (row in nrow(data)){
if (is.na(data[row,"day"]) == "TRUE"){
data[row,"day"] <- -1
}
}
